//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Inputs/Controles.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controles : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controles()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controles"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""9901179e-e498-4cda-9dac-620634816b75"",
            ""actions"": [
                {
                    ""name"": ""Interactuar"",
                    ""type"": ""Button"",
                    ""id"": ""4922c365-b3ff-4615-a677-a7b68ae2470b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mover"",
                    ""type"": ""Value"",
                    ""id"": ""43d81f9c-4825-4726-b71a-1089894002df"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""StickDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotaCamara"",
                    ""type"": ""Value"",
                    ""id"": ""4f4a3e72-985c-4470-9dbe-1a3d799525ff"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Saltar"",
                    ""type"": ""Button"",
                    ""id"": ""dd7e040e-5e38-42fe-b909-6b4df307332c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""de8bdf0c-9475-46fe-b62a-54b8f1184265"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interactuar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""62623e8e-2e55-4b1e-b9e1-e868e015630f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4a5f8f84-72b5-4fd6-9da0-46143130a321"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8ff6ac0a-f2ab-4464-85ed-019fbeff5ad3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""99fd9662-9fc6-43a3-871d-ccf16102cab0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ec9fbf3e-ae6c-4071-8cd3-a7c4d448de18"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Flechas"",
                    ""id"": ""b33df372-e40e-4402-9dd5-ee0a81fd217d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b0019787-f508-4560-b61b-a4f0c84ace2d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""fbec1a2f-663f-4550-911b-2d53fe05b590"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""04166d90-f468-4c18-b49e-a10e701870ce"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2615c590-a6c6-47c7-8262-be059318ab0f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""689fa9c5-0eca-4db3-aebe-a32da604e0cc"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a02a703-3c23-430e-804b-3a6b80369a93"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotaCamara"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d02366a-647e-42ca-aad2-59aecc077297"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotaCamara"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""410cf84c-5c30-49b8-b33d-23e91d43725f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Saltar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ae9e9d7-5f84-4d9d-8506-1da078a22dbc"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Saltar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Teclado"",
            ""bindingGroup"": ""Teclado"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Interactuar = m_Gameplay.FindAction("Interactuar", throwIfNotFound: true);
        m_Gameplay_Mover = m_Gameplay.FindAction("Mover", throwIfNotFound: true);
        m_Gameplay_RotaCamara = m_Gameplay.FindAction("RotaCamara", throwIfNotFound: true);
        m_Gameplay_Saltar = m_Gameplay.FindAction("Saltar", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Interactuar;
    private readonly InputAction m_Gameplay_Mover;
    private readonly InputAction m_Gameplay_RotaCamara;
    private readonly InputAction m_Gameplay_Saltar;
    public struct GameplayActions
    {
        private @Controles m_Wrapper;
        public GameplayActions(@Controles wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interactuar => m_Wrapper.m_Gameplay_Interactuar;
        public InputAction @Mover => m_Wrapper.m_Gameplay_Mover;
        public InputAction @RotaCamara => m_Wrapper.m_Gameplay_RotaCamara;
        public InputAction @Saltar => m_Wrapper.m_Gameplay_Saltar;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Interactuar.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteractuar;
                @Interactuar.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteractuar;
                @Interactuar.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteractuar;
                @Mover.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMover;
                @Mover.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMover;
                @Mover.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMover;
                @RotaCamara.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRotaCamara;
                @RotaCamara.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRotaCamara;
                @RotaCamara.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRotaCamara;
                @Saltar.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSaltar;
                @Saltar.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSaltar;
                @Saltar.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSaltar;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Interactuar.started += instance.OnInteractuar;
                @Interactuar.performed += instance.OnInteractuar;
                @Interactuar.canceled += instance.OnInteractuar;
                @Mover.started += instance.OnMover;
                @Mover.performed += instance.OnMover;
                @Mover.canceled += instance.OnMover;
                @RotaCamara.started += instance.OnRotaCamara;
                @RotaCamara.performed += instance.OnRotaCamara;
                @RotaCamara.canceled += instance.OnRotaCamara;
                @Saltar.started += instance.OnSaltar;
                @Saltar.performed += instance.OnSaltar;
                @Saltar.canceled += instance.OnSaltar;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    private int m_TecladoSchemeIndex = -1;
    public InputControlScheme TecladoScheme
    {
        get
        {
            if (m_TecladoSchemeIndex == -1) m_TecladoSchemeIndex = asset.FindControlSchemeIndex("Teclado");
            return asset.controlSchemes[m_TecladoSchemeIndex];
        }
    }
    public interface IGameplayActions
    {
        void OnInteractuar(InputAction.CallbackContext context);
        void OnMover(InputAction.CallbackContext context);
        void OnRotaCamara(InputAction.CallbackContext context);
        void OnSaltar(InputAction.CallbackContext context);
    }
}
